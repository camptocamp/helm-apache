---
# Source: apache/templates/pdb.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: qgis-apache
  labels:
    app.kubernetes.io/name: apache
    app.kubernetes.io/instance: qgis
    app.kubernetes.io/component: main
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: apache
      app.kubernetes.io/instance: qgis
      app.kubernetes.io/component: main
---
# Source: apache/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: qgis
  labels:
    helm.sh/chart: apache-0.1.0
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: apache
    app.kubernetes.io/instance: qgis
    app.kubernetes.io/component: main
---
# Source: apache/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: qgis-apache
  labels:
    helm.sh/chart: apache-0.1.0
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: apache
    app.kubernetes.io/instance: qgis
    app.kubernetes.io/component: main
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 9117
      targetPort: prometheus
      protocol: TCP
      name: prometheus
  selector:
    app.kubernetes.io/name: apache
    app.kubernetes.io/instance: qgis
    app.kubernetes.io/component: main
---
# Source: apache/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qgis-apache
  labels:
    helm.sh/chart: apache-0.1.0
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: apache
    app.kubernetes.io/instance: qgis
    app.kubernetes.io/component: main
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: apache
      app.kubernetes.io/instance: qgis
      app.kubernetes.io/component: main
  template:
    metadata:
      labels:
        app.kubernetes.io/name: apache
        app.kubernetes.io/instance: qgis
        app.kubernetes.io/component: main
    spec:

      serviceAccountName: qgis
      securityContext:
        runAsNonRoot: true
        runAsUser: 33
      affinity:
        {}
      initContainers:
        - name: config
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/geomapfishdemo-config:prod-2-7"
          imagePullPolicy: IfNotPresent
          env:
              - name: "PGDATABASE"
                value: "postgres"
              - name: "PGHOST"
                value: "test-pg-postgresql"
              - name: "PGHOST_SLAVE"
                value: "test-pg-postgresql"
              - name: "PGPASSWORD"
                value: "mySuperTestingPassword"
              - name: "PGPORT"
                value: "5432"
              - name: "PGPORT_SLAVE"
                value: "5432"
              - name: "PGSCHEMA"
                value: "main"
              - name: "PGUSER"
                value: "postgres"
              - name: "QGIS_PROJECT_FILE"
                value: "/etc/qgisserver/project.qgz"
              - name: "QGIS_SERVER_IGNORE_BAD_LAYERS"
                value: "TRUE"
              - name: "VISIBLE_ENTRY_POINT"
                value: "/"
              - name: "VISIBLE_WEB_HOST"
                value: "example.com"
              - name: "VISIBLE_WEB_PROTOCOL"
                value: "https"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args: ['bash', '-c', 'cp -a /etc/qgisserver/* /etc/config-volume/']
          volumeMounts:
            - mountPath: /etc/config-volume
              name: configs
      containers:
        - name: apache
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/qgis-server:3.20"
          imagePullPolicy: IfNotPresent
          env:
              - name: "QGIS_PROJECT_FILE"
                value: "/etc/qgisserver/project.qgz"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            limits:
              memory: 1Gi
          volumeMounts:
            - mountPath: /etc/qgisserver
              name: configs
              readOnly: false
            - mountPath: /tmp
              name: tmp-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /?SERVICE=WMS&REQUEST=GetCapabilities
              port: http
            initialDelaySeconds: 5
            periodSeconds: 20
            timeoutSeconds: 300
          startupProbe:
            httpGet:
              path: /?SERVICE=WMS&REQUEST=GetCapabilities
              port: http
            initialDelaySeconds: 5
            periodSeconds: 20
            timeoutSeconds: 300
        - name: apache-exporter
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "quay.io/lusitaniae/apache-exporter:v0.10.1"
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args:
            - '--scrape_uri=http://qgis-apache/server-status-remote?auto'
          ports:
            - name: prometheus
              containerPort: 9117
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: prometheus
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 20
      volumes:
        - name: configs
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}
---
# Source: apache/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qgis-apache
  labels:
    helm.sh/chart: apache-0.1.0
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: apache
    app.kubernetes.io/instance: qgis
    app.kubernetes.io/component: main
spec:
  rules:
    - host: "qgis.local"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: qgis-apache
                port:
                  number: 80

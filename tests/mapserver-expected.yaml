---
# Source: apache/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mapserver-apache
  labels:
    app.kubernetes.io/name: apache
    app.kubernetes.io/instance: mapserver
    app.kubernetes.io/component: main
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: apache
      app.kubernetes.io/instance: mapserver
      app.kubernetes.io/component: main
---
# Source: apache/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mapserver-apache
  labels:
    helm.sh/chart: apache
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: apache
    app.kubernetes.io/instance: mapserver
    app.kubernetes.io/component: main
    prometheus: "true"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 9117
      targetPort: prometheus
      protocol: TCP
      name: prometheus
  selector:
    app.kubernetes.io/name: apache
    app.kubernetes.io/instance: mapserver
    app.kubernetes.io/component: main
---
# Source: apache/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mapserver-apache

  labels:
    helm.sh/chart: apache
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: apache
    app.kubernetes.io/instance: mapserver
    app.kubernetes.io/component: main
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: apache
      app.kubernetes.io/instance: mapserver
      app.kubernetes.io/component: main
  template:
    metadata:
      labels:
        app.kubernetes.io/name: apache
        app.kubernetes.io/instance: mapserver
        app.kubernetes.io/component: main
    spec:
      serviceAccountName: default
      securityContext:
        {}
      affinity:
        {}
      containers:
        - name: apache
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/mapserver:latest"
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          volumeMounts:
            - mountPath: /etc/apache
              name: configs
              readOnly: false
            - mountPath: /tmp
              name: tmp-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 20
            timeoutSeconds: 10
          startupProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 20
            timeoutSeconds: 10
        - name: apache-exporter
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "quay.io/lusitaniae/apache-exporter:v0.10.1"
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args:
            - '--scrape_uri=http://mapserver-apache/server-status-remote?auto'
          ports:
            - name: prometheus
              containerPort: 9117
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: prometheus
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 20
      volumes:
        - name: configs
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}

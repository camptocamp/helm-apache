apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" ( dict "root" . "service" .Values ) }}
  labels: {{ include "common.labels" ( dict "root" . "service" .Values ) | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels: {{- include "common.selectorLabels" ( dict "root" . "service" .Values ) | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.selectorLabels" ( dict "root" . "service" .Values ) | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- include "common.podConfig" ( dict "root" . "service" .Values ) | nindent 6 }}
      {{- if .Values.config.enabled }}
      initContainers:
        - name: config
          {{- include "common.containerConfig" ( dict "root" . "container" .Values.config ) | nindent 10 }}
          args: ['bash', '-c', 'cp -a {{ .Values.config.folder }}/* /etc/config-volume/']
          volumeMounts:
            - mountPath: /etc/config-volume
              name: configs
      {{- end }}
      containers:
        - name: apache
          {{- include "common.containerConfig" ( dict "root" . "container" .Values ) | nindent 10 }}
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: {{ .Values.config.folder }}
              name: configs
              readOnly: false
            - mountPath: /tmp
              name: tmp-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          startupProbe:
          {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.apacheExporter.enabled }}
        - name: apache-exporter
          {{- include "common.containerConfig" ( dict "root" . "container" .Values.apacheExporter ) | nindent 10 }}
          args:
            - '--scrape_uri=http://{{ include "common.fullname" ( dict "root" . "service" .Values ) }}/server-status-remote?auto'
          ports:
            - name: prometheus
              containerPort: 9117
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: prometheus
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 20
        {{- end }}
      volumes:
        - name: configs
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}

---
name: Continuous integration

on:
  push:
  pull_request:

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  main:
    runs-on: ubuntu-20.04
    name: Continuous integration
    timeout-minutes: 20
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - name: Checks
        run: c2cciutils-checks

      - uses: azure/setup-helm@v1
      - run: helm dependency update .
      - run: helm lint .
      - run: helm lint --values=tests/qgis.yaml .
      - run: helm template --namespace=default --values=tests/mapserver.yaml mapserver . > tests/mapserver-actual.yaml
      - run: diff --ignore-trailing-space tests/mapserver-actual.yaml tests/mapserver-expected.yaml
      - run: helm template --namespace=default --values=tests/qgis.yaml qgis . > tests/qgis-actual.yaml
      - run: diff --ignore-trailing-space tests/qgis-actual.yaml tests/qgis-expected.yaml

      # Setup k3s/k3d
      - run: wget -q -O - https://raw.githubusercontent.com/rancher/k3d/main/install.sh | TAG=v4.4.8 bash
      - run: k3d --version
      - run: >-
          k3d cluster create test-cluster-1
          --no-lb
          --no-hostip
          --no-rollback
          --k3s-server-arg "--no-deploy=traefik,servicelb,metrics-server"
      - run: kubectl version

      # launch mapserver
      - run: kubectl apply -f tests/mapserver-expected.yaml
      - run: ci/k8s-wait-deployed
      - run: ci/k8s-logs
        if: always()
      - run: kubectl delete -f tests/mapserver-expected.yaml || true

      # create a test-pg database
      - run: helm repo add bitnami https://charts.bitnami.com/bitnami
      - run: helm install test-pg --set persistence.enabled=false --set tls.enabled=true --set tls.autoGenerated=true --set postgresqlPassword=mySuperTestingPassword --set volumePermissions.enabled=true bitnami/postgresql
      - run: ci/k8s-wait-with-labels.py "app.kubernetes.io/name=postgresql"
      - run: kubectl run test-pg-postgresql-client --restart='Never' --namespace default --image docker.io/bitnami/postgresql:11.13.0-debian-10-r60 --env="PGPASSWORD=mySuperTestingPassword" --command -- psql --host test-pg-postgresql -U postgres -d postgres -p 5432 < tests/demo_schema.sql
      - run: ci/k8s-wait-with-labels.py "run=test-pg-postgresql-client"

      # launch qgisserver
      - run: kubectl apply -f tests/qgis-expected.yaml
      - run: ci/k8s-wait-deployed
      - run: ci/k8s-logs
        if: always()
      - run: kubectl delete -f tests/qgis-expected.yaml || true

      # delete test-pg
      - run: helm uninstall test-pg || true
        if: always()


      - name: Publish
        run: c2cciutils-publish
